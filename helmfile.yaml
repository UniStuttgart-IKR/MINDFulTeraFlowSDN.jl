helmDefaults:
  wait: true
  timeout: 300

repositories:
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: twuni
    url: https://helm.twun.io
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: metrics-server
    url: https://kubernetes-sigs.github.io/metrics-server/

hooks:
  # This hook runs before syncing and cleans up old releases and namespaces.
  - events: ["prepare"]
    command: "bash"
    args:
      - "-c"
      - |
        echo "Starting cleanup of existing installations..."

        # Uninstall any previous releases
        helm uninstall ingress-nginx --namespace ingress 2>/dev/null || true
        helm uninstall registry --namespace addons 2>/dev/null || true
        helm uninstall prometheus --namespace monitoring 2>/dev/null || true
        helm uninstall metrics-server --namespace kube-system 2>/dev/null || true

        # Ensure the Metrics Server is fully removed
        echo "Deleting Metrics Server deployment, API service, and service..."
        kubectl delete deployment metrics-server -n kube-system 2>/dev/null || true
        kubectl delete apiservice v1beta1.metrics.k8s.io 2>/dev/null || true
        kubectl delete service metrics-server -n kube-system 2>/dev/null || true
        kubectl delete serviceaccount metrics-server -n kube-system 2>/dev/null || true
        
        # Optionally delete namespaces to start from a clean slate
        for ns in ingress addons monitoring; do
          echo "Deleting namespace ${ns}..."
          kubectl delete namespace ${ns} 2>/dev/null || true
          while kubectl get namespace ${ns} >/dev/null 2>&1; do
            echo "Waiting for namespace ${ns} to be deleted..."
            sleep 5
          done
        done

        echo "Cleanup completed."

releases:
  - name: ingress-nginx
    namespace: ingress
    createNamespace: true
    chart: ingress-nginx/ingress-nginx
    values:
      - controller:
          service:
            type: NodePort

  - name: registry
    namespace: addons
    createNamespace: true
    chart: twuni/docker-registry
    values:
      - service:
          type: NodePort

  - name: prometheus
    namespace: monitoring
    createNamespace: true
    chart: prometheus-community/kube-prometheus-stack
    values:
      - grafana:
          service:
            type: NodePort

  - name: metrics-server
    namespace: kube-system
    chart: metrics-server/metrics-server
    values:
      - args: ["--kubelet-insecure-tls"]
      - service:
          type: NodePort
